plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'co.uzzu.dotenv.gradle' version '1.2.0'
}

apply from: rootProject.file('nmsModule.gradle')
craftbukkitVersion = '1.19-R0.1-SNAPSHOT'

def spigot = "org.spigotmc:spigot-api:" + craftbukkitVersion
def proxy = "net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT"

allprojects {

    group 'me.lede'
    version '1.0.0'

    compileJava.options.encoding = 'UTF-8'
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    def targetJavaVersion = 17

    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release = targetJavaVersion
        }
    }

}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }

    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('bungee.yml') {
            expand props
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()

        // Spigot
        maven {
            name = 'spigotmc-repo'
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }
    }

    dependencies {
        // Spigot
        implementation spigot
        testImplementation spigot

        // Bungeecord
        implementation proxy
        testImplementation proxy

        // junit
        testCompileOnly group: 'junit', name: 'junit', version: '4.12'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

        // slf4j
        implementation 'org.slf4j:slf4j-api:2.0.0-alpha7'
        testImplementation 'org.slf4j:slf4j-api:2.0.0-alpha7'

        // jetBrain annotation
        implementation 'org.jetbrains:annotations:23.0.0'
        testImplementation 'org.jetbrains:annotations:23.0.0'

        // gson
        implementation 'com.google.code.gson:gson:2.9.0'
        testImplementation 'com.google.code.gson:gson:2.9.0'

        // guava
        implementation 'com.google.guava:guava:31.1-jre'
        testImplementation 'com.google.guava:guava:31.1-jre'

        // MongoDB
        implementation 'org.mongodb:mongodb-driver-sync:4.5.0'
        testImplementation 'org.mongodb:mongodb-driver-sync:4.5.0'

        // Kyori Adventure
        implementation "net.kyori:adventure-api:4.10.1"
        implementation 'net.kyori:adventure-text-serializer-legacy:4.10.1'
        implementation 'net.kyori:adventure-text-serializer-plain:4.10.1'
        testImplementation "net.kyori:adventure-api:4.10.1"
        testImplementation 'net.kyori:adventure-text-serializer-legacy:4.10.1'
        testImplementation 'net.kyori:adventure-text-serializer-plain:4.10.1'
    }

    test {
        useJUnitPlatform()
    }

}

// Applications
project(':applications:lumberlib-app-spigot') {
    jar {
        destinationDirectory = file(env.JAR_DIR.value)
    }
    shadowJar {
        destinationDirectory = file(env.JAR_DIR.value)
    }

    dependencies {
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = 'https://maven.pkg.github.com/lede-dev/' + rootProject.name.toLowerCase()
                credentials {
                    username = env.fetch('GPR_USER', System.getenv('GPR_USER') ?: '')
                    password = env.fetch('GPR_KEY', System.getenv('GPR_KEY') ?: '')
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                groupId = this.group
                artifactId = rootProject.name.toLowerCase()
                version = this.version
                from(components.java)
            }
        }
    }
}

project(':applications:lumberlib-app-proxy') {
    jar {
        destinationDirectory = file(env.JAR_PROXY_DIR.value)
    }
    shadowJar {
        destinationDirectory = file(env.JAR_PROXY_DIR.value)
    }

    dependencies {
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = 'https://maven.pkg.github.com/lede-dev/' + rootProject.name.toLowerCase()
                credentials {
                    username = env.fetch('GPR_USER', System.getenv('GPR_USER') ?: '')
                    password = env.fetch('GPR_KEY', System.getenv('GPR_KEY') ?: '')
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                groupId = this.group
                artifactId = rootProject.name.toLowerCase() + "-proxy"
                version = this.version
                from(components.java)
            }
        }
    }
}